@inject IJSRuntime JS

<div @ref="elem" class="@AspectRatio.ToCssClass()">
    <CascadingValue Value="this">
        @ChildContent
    </CascadingValue>
</div>

@code {
    [Parameter] public RenderFragment ChildContent { get; set; }

    [Parameter] public ChartType Type { get; set; } = ChartType.Line;

    [Parameter] public AspectRatio? AspectRatio { get; set; }

    [Parameter] public IEnumerable<string> Labels { get; set; }

    [Parameter] public List<object> Series { get; set; } = new List<object>();

    private ElementReference elem;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("BlazorChartist.init", elem, Type.ToString());
            await UpdateAsync();
        }
    }

    public async Task UpdateAsync()
    {
        await JS.InvokeVoidAsync("BlazorChartist.update", elem, new
        {
            Labels,
            Series,
        });
    }
}
