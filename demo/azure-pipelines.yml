trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
# Specify a particular version of the .NET SDK
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: sdk
    version: 3.1.100
    installationPath: $(Agent.ToolsDirectory)/dotnet

# Build the solution. Not strictly required to create the package,
# but we want the build to fail if any sample can't build.
- script: dotnet build --configuration $(buildConfiguration)
  workingDirectory: demo
  displayName: 'dotnet build $(buildConfiguration)'

# Actually creates the NuGet package file
- script: dotnet pack --configuration $(buildConfiguration) /p:VersionSuffix=$(Build.BuildNumber)
  workingDirectory: demo/src/BlazorChartist
  displayName: 'dotnet pack'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'demo/artifacts'
    ArtifactName: 'artifacts'
    publishLocation: 'Container'

# Uploads the NuGet package file to nuget.org
# For this to work, you need to create a 'service connection' with the same name
# as the 'publishFeedCredentials' value
- task: NuGetCommand@2
  displayName: 'Publish to nuget.org'
  #condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    command: push
    packagesToPush: 'demo/artifacts/*.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: 'NuGet demo'
